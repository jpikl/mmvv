<!-- Created with term-transcript v0.3.0 (https://github.com/slowli/term-transcript) -->
<svg viewBox="0 0 720 1200" width="720" height="1200" xmlns="http://www.w3.org/2000/svg">
  <switch>
    <g requiredExtensions="http://www.w3.org/1999/xhtml">
      <style>
        .container {
          padding: 0 10px;
          color: #e5e5e5;
          line-height: 18px;
        }
        .container pre {
          padding: 0;
          margin: 0;
          font: 14px SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace;
          line-height: inherit;
        }
        .input {
          margin: 0 -10px 6px;
          color: #e5e5e5;
          background: rgba(255, 255, 255, 0.1);
          padding: 2px 10px;
        }
        .input-hidden { display: none; }
        .output { margin-bottom: 6px; }
        .bold,.prompt { font-weight: bold; }
        .italic { font-style: italic; }
        .underline { text-decoration: underline; }
        .dimmed { opacity: 0.7; }
        .hard-br {
          position: relative;
          margin-left: 5px;
        }
        .hard-br:before {
          content: 'â†“';
          font-size: 16px;
          height: 16px;
          position: absolute;
          bottom: 0;
          transform: rotate(45deg);
          opacity: 0.8;
        }
        .fg0 { color: #000000; } .bg0 { background: #000000; }
        .fg1 { color: #cd0000; } .bg1 { background: #cd0000; }
        .fg2 { color: #00cd00; } .bg2 { background: #00cd00; }
        .fg3 { color: #cdcd00; } .bg3 { background: #cdcd00; }
        .fg4 { color: #0000ee; } .bg4 { background: #0000ee; }
        .fg5 { color: #cd00cd; } .bg5 { background: #cd00cd; }
        .fg6 { color: #00cdcd; } .bg6 { background: #00cdcd; }
        .fg7 { color: #e5e5e5; } .bg7 { background: #e5e5e5; }
        .fg8 { color: #7f7f7f; } .bg8 { background: #7f7f7f; }
        .fg9 { color: #ff0000; } .bg9 { background: #ff0000; }
        .fg10 { color: #00ff00; } .bg10 { background: #00ff00; }
        .fg11 { color: #ffff00; } .bg11 { background: #ffff00; }
        .fg12 { color: #5c5cff; } .bg12 { background: #5c5cff; }
        .fg13 { color: #ff00ff; } .bg13 { background: #ff00ff; }
        .fg14 { color: #00ffff; } .bg14 { background: #00ffff; }
        .fg15 { color: #ffffff; } .bg15 { background: #ffffff; }
      </style>
      <rect width="100%" height="100%" y="0" rx="4.5" style="fill: #000000;" />
      <svg x="0" y="10" width="720" height="1180" viewBox="0 0 720 1180">
        <foreignObject width="720" height="1180">
          <div xmlns="http://www.w3.org/1999/xhtml" class="container">
            <div class="input" data-exit-status="0"><pre><span class="prompt">$</span> rew seq --help</pre></div>
            <div class="output"><pre>Print sequence of numbers as lines

<span class="bold underline">Usage:</span> <span class="bold">rew seq</span> [OPTIONS] [FROM..[TO]] [STEP]

<span class="bold underline">Arguments:</span>
  [FROM..[TO]]
          Sequence range.
          
          Both <span class="bold">FROM</span> and <span class="bold">TO</span> are integers.
          
          <span class="bold">TO</span> may be ommited to produce an infinite sequence.
          
          [default: 1..]

  [STEP]
          Increment between numbers in sequence.
          
          Default value: <span class="bold">1</span> (for increasing sequence), <span class="bold">-1</span> (for decreasing sequenc<b class="hard-br"><br/></b>e)

<span class="bold underline">Options:</span>
  <span class="bold">-h</span>, <span class="bold">--help</span>
          Print help (see a summary with '-h')

      <span class="bold">--examples</span>
          Print examples of the command usage

<span class="bold underline">Global options:</span>
  <span class="bold">-0</span>, <span class="bold">--null</span>
          Line delimiter is NUL, not newline
          
          [env: REW_NULL=]

      <span class="bold">--buf-mode</span> &lt;MODE&gt;
          Output buffering mode
          
          [env: REW_BUF_MODE=]

          Possible values:
          - <span class="bold">line</span>: Writes to stdout after a line was processed or when the output<b class="hard-br"><br/></b> buffer is full.
            Enabled by default when stdout is TTY (for interactive usage)
          - <span class="bold">full</span>: Writes to stdout only when the output buffer is full. Enabled <b class="hard-br"><br/></b>by default when
            stdout is not TTY (for maximal throughput)

      <span class="bold">--buf-size</span> &lt;BYTES&gt;
          Size of a buffer used for IO operations.
          
          Smaller values will reduce memory consumption but could negatively aff<b class="hard-br"><br/></b>ect throughput.
          
          Larger values will increase memory consumption but may improve through<b class="hard-br"><br/></b>put in some cases.
          
          Certain commands (which can only operate with whole lines) won't be ab<b class="hard-br"><br/></b>le to fetch a line
          bigger than this limit and will abort their execution instead.
          
          [env: REW_BUF_SIZE=]
          [default: 32768]

Visit <span class="bold">https://jpikl.github.io/rew/reference/rew-seq.html.html</span> for a complete ref<b class="hard-br"><br/></b>erence and examples.</pre></div>
          </div>
        </foreignObject>
      </svg>
    </g>
    <text x="10" y="18" style="font: 14px SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace; fill: #cd0000;">
      HTML embedding not supported.
      Consult <tspan style="text-decoration: underline; text-decoration-thickness: 1px;"><a href="https://github.com/slowli/term-transcript/blob/HEAD/FAQ.md">term-transcript docs</a></tspan> for details.
    </text>
  </switch>
</svg>
